@techreport{shark:tr:2003,
  title = {Optimizing {{Shell Scripting Languages}}},
  author = {Berger, Emery D.},
  year = {2003},
  number = {UMCS TR-2003-009},
  institution = {University of Massachusetts Amherst},
  langid = {english}
}

@inproceedings{dacapo:oopsla:2006,
author = {Blackburn, Stephen M. and Garner, Robin and Hoffmann, Chris and Khang, Asjad M. and McKinley, Kathryn S. and Bentzur, Rotem and Diwan, Amer and Feinberg, Daniel and Frampton, Daniel and Guyer, Samuel Z. and Hirzel, Martin and Hosking, Antony and Jump, Maria and Lee, Han and Moss, J. Eliot B. and Phansalkar, Aashish and Stefanovi\'{c}, Darko and VanDrunen, Thomas and von Dincklage, Daniel and Wiedermann, Ben},
title = {The DaCapo benchmarks: java benchmarking development and analysis},
year = {2006},
isbn = {1595933484},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1167473.1167488},
doi = {10.1145/1167473.1167488},
booktitle = {Proceedings of the 21st Annual ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications},
pages = {169–190},
numpages = {22},
keywords = {methodology, benchmark, SPEC, Java, DaCapo},
location = {Portland, Oregon, USA},
series = {OOPSLA '06}
}

@inproceedings{deathstar:asplos:2019,
author = {Gan, Yu and Zhang, Yanqi and Cheng, Dailun and Shetty, Ankitha and Rathi, Priyal and Katarki, Nayan and Bruno, Ariana and Hu, Justin and Ritchken, Brian and Jackson, Brendon and Hu, Kelvin and Pancholi, Meghna and He, Yuan and Clancy, Brett and Colen, Chris and Wen, Fukang and Leung, Catherine and Wang, Siyuan and Zaruvinsky, Leon and Espinosa, Mateo and Lin, Rick and Liu, Zhongling and Padilla, Jake and Delimitrou, Christina},
title = {An Open-Source Benchmark Suite for Microservices and Their Hardware-Software Implications for Cloud \& Edge Systems},
year = {2019},
isbn = {9781450362405},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3297858.3304013},
doi = {10.1145/3297858.3304013},
booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {3–18},
numpages = {16},
keywords = {acceleration, cloud computing, cluster management, datacenters, fpga, microservices, qos, serverless},
location = {Providence, RI, USA},
series = {ASPLOS '19}
}

@inproceedings{parsec:pact:2008,
author = {Bienia, Christian and Kumar, Sanjeev and Singh, Jaswinder Pal and Li, Kai},
title = {The PARSEC benchmark suite: characterization and architectural implications},
year = {2008},
isbn = {9781605582825},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1454115.1454128},
doi = {10.1145/1454115.1454128},
booktitle = {Proceedings of the 17th International Conference on Parallel Architectures and Compilation Techniques},
pages = {72–81},
numpages = {10},
keywords = {shared-memory computers, performance measurement, multithreading, benchmark suite},
location = {Toronto, Ontario, Canada},
series = {PACT '08}
}

@inproceedings{fusion:cidr:2022,
  author        = {{Anna Herlihy and Periklis Chrysogelos and Anastasia Ailamaki}},
  title         = {{Boosting Efficiency of External Pipelines by Blurring Application Boundaries}},
  booktitle     = {{12th Conference on Innovative Data Systems Research, {CIDR} 2022, Chaminade, CA, USA, January 9-12, 2022}},
  publisher     = {{www.cidrdb.org}},
  year          = {{2022}},
  url           = {{https://www.cidrdb.org/cidr2022/papers/p81-herlihy.pdf}},
  timestamp     = {{Mon, 18 Jul 2022 17:13:00 +0200}},
  biburl        = {{https://dblp.org/rec/conf/cidr/HerlihyCA22.bib}},
  bibsource     = {{dblp computer science bibliography, https://dblp.org}}
}

@inproceedings{sshell:imc:2021,
author = {Mah\'{e}o, Aur\`{e}le and Sutra, Pierre and Tarrant, Tristan},
title = {The serverless shell},
year = {2021},
isbn = {9781450391528},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3491084.3491426},
doi = {10.1145/3491084.3491426},
abstract = {Serverless computing is a recent paradigm to program the cloud. It allows to execute user-defined functions at scale, on demand, and in a pay-per-use manner. This paper reports on adapting the Unix shell for serverless. Our software, called the serverless shell (sshell), runs shell scripts on a serverless platform much like with a regular computer. It permits to reuse an existing code base while benefiting from the massive power of serverless and paying only for the resources used. sshell is built around a small set of components that includes a new inter-process communication layer for serverless. We evaluate it in AWS Lambda using several microbenchmarks and a large-scale application. Our results show that sshell achieves comparable or better performance than a high-end server. Moreover, it can be faster and more cost-efficient than a cluster-based solution to mine large datasets.},
booktitle = {Proceedings of the 22nd International Middleware Conference: Industrial Track},
pages = {9–15},
numpages = {7},
keywords = {shell, serverless computing, function-as-a-service},
location = {Qu\'{e}bec city, Canada},
series = {Middleware '21}
}

@inproceedings{posh:atc:2020,
  author        = {{Raghavan, Deepti and Fouladi, Sadjad and Levis, Philip and Zaharia, Matei}},
  title         = {{POSH: a data-aware shell}},
  year          = {{2020}},
  isbn          = {{978-1-939133-14-4}},
  doi           = {{10.5555/3489146.3489188}},
  url           = {{https://dl.acm.org/doi/10.5555/3489146.3489188}},
  publisher     = {{USENIX Association}},
  address       = {{USA}},
  abstract      = {{We present POSH, a framework that accelerates shell applications with I/O-heavy components, such as data analytics with command-line utilities. Remote storage such as networked filesystems can severely limit the performance of these applications: data makes a round trip over the network for relatively little computation at the client. Reducing the data movement by moving the code to the data can improve performance.POSH automatically optimizes unmodified I/O-intensive shell applications running over remote storage by offloading the I/O-intensive portions to proxy servers closer to the data. A proxy can run directly on a storage server, or on a machine closer to the storage layer than the client. POSH intercepts shell pipelines and uses metadata called annotations to decide where to run each command within the pipeline. We address three principal challenges that arise: an annotation language that allows POSH to understand which files a command will access, a scheduling algorithm that places commands to minimize data movement, and a system runtime to execute a distributed schedule but retain local semantics.We benchmark POSH on real shell pipelines such as image processing, network security analysis, log analysis, distributed system debugging, and git. We find that POSH provides speedups ranging from 1.6\texttimes{} to 15\texttimes{} compared to NFS, without requiring any modifications to the applications.}},
  booktitle     = {{Proceedings of the 2020 USENIX Conference on Usenix Annual Technical Conference}},
  articleno     = {{42}},
  numpages      = {{15}},
  series        = {{USENIX ATC'20}}
}

@inproceedings{sesame:sosp:2024,
author = {Dak Albab, Kinan and Agvanian, Artem and Aby, Allen and Tiffany, Corinn and Portland, Alexander and Ridley, Sarah and Schwarzkopf, Malte},
title = {Sesame: Practical End-to-End Privacy Compliance with Policy Containers and Privacy Regions},
year = {2024},
isbn = {9798400712517},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3694715.3695984},
doi = {10.1145/3694715.3695984},
abstract = {Web applications are governed by privacy policies, but developers lack practical abstractions to ensure that their code actually abides by these policies. This leads to frequent oversights, bugs, and costly privacy violations.Sesame is a practical framework for end-to-end privacy policy enforcement. Sesame wraps data in policy containers that associate data with policies that govern its use. Policy containers force developers to use privacy regions when operating on the data, and Sesame combines sandboxing and a novel static analysis to prevent privacy regions from leaking data. Sesame enforces a policy check before externalizing data, and it supports custom I/O via reviewed, signed code.Experience with four web applications shows that Sesame's automated guarantees cover 95\% of application code, with the remaining 5\% needing manual review. Sesame achieves this with reasonable application developer effort and imposes 3--10\% performance overhead (10--55\% with sandboxes).},
booktitle = {Proceedings of the ACM SIGOPS 30th Symposium on Operating Systems Principles},
pages = {709–725},
numpages = {17},
keywords = {privacy enforcement, information flow control, privacy policies, Rust, static analysis, sandbox},
location = {Austin, TX, USA},
series = {SOSP '24}
}

@article{gdpr:vldb:2021,
  title={Retrofitting GDPR compliance onto legacy databases},
  author={Agarwal, Archita and George, Marilyn and Jeyaraj, Aaron and Schwarzkopf, Malte},
  journal={Proceedings of the VLDB Endowment},
  volume={15},
  number={4},
  year={2021}
}

@inproceedings{debloat:usenix:2019,
author = {Azad, Babak Amin and Laperdrix, Pierre and Nikiforakis, Nick},
title = {Less is more: quantifying the security benefits of debloating web applications},
year = {2019},
isbn = {9781939133069},
publisher = {USENIX Association},
address = {USA},
booktitle = {Proceedings of the 28th USENIX Conference on Security Symposium},
pages = {1697–1714},
numpages = {18},
location = {Santa Clara, CA, USA},
series = {SEC'19}
}

@inproceedings{pm:ccs:2019,
author = {Liu, Shen and Zeng, Dongrui and Huang, Yongzhe and Capobianco, Frank and McCamant, Stephen and Jaeger, Trent and Tan, Gang},
title = {Program-mandering: Quantitative Privilege Separation},
year = {2019},
isbn = {9781450367479},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3319535.3354218},
doi = {10.1145/3319535.3354218},
booktitle = {Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security},
pages = {1023–1040},
numpages = {18},
keywords = {automatic program partitioning, integer programming, privilege separation},
location = {London, United Kingdom},
series = {CCS '19}
}

@inproceedings{pivot:sp:2014,
author = {Mickens, James},
title = {Pivot: Fast, Synchronous Mashup Isolation Using Generator Chains},
year = {2014},
isbn = {9781479946860},
publisher = {IEEE Computer Society},
address = {USA},
url = {https://doi.org/10.1109/SP.2014.24},
doi = {10.1109/SP.2014.24},
booktitle = {Proceedings of the 2014 IEEE Symposium on Security and Privacy},
pages = {261–275},
numpages = {15},
series = {SP '14}
}

@inproceedings{mozart:sosp:2019,
author = {Palkar, Shoumik and Zaharia, Matei},
title = {Optimizing data-intensive computations in existing libraries with split annotations},
year = {2019},
isbn = {9781450368735},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341301.3359652},
doi = {10.1145/3341301.3359652},
booktitle = {Proceedings of the 27th ACM Symposium on Operating Systems Principles},
pages = {291–305},
numpages = {15},
location = {Huntsville, Ontario, Canada},
series = {SOSP '19}
}

@inproceedings{tuplex:sigmod:2021,
author = {Spiegelberg, Leonhard and Yesantharao, Rahul and Schwarzkopf, Malte and Kraska, Tim},
title = {Tuplex: Data Science in Python at Native Code Speed},
year = {2021},
isbn = {9781450383431},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3448016.3457244},
doi = {10.1145/3448016.3457244},
booktitle = {Proceedings of the 2021 International Conference on Management of Data},
pages = {1718–1731},
numpages = {14},
keywords = {user defined functions, udf, query processing, query execution, python, native code, jit compiler, high performance computing, dataframe, data science, compilation, big data analytics},
location = {Virtual Event, China},
series = {SIGMOD '21}
}

@inproceedings {riker:atc:2022,
author = {Charlie Curtsinger and Daniel W. Barowy},
title = {Riker: {Always-Correct} and Fast Incremental Builds from Simple Specifications},
booktitle = {2022 USENIX Annual Technical Conference (USENIX ATC 22)},
year = {2022},
isbn = {978-1-939133-29-70},
address = {Carlsbad, CA},
pages = {885--898},
url = {https://www.usenix.org/conference/atc22/presentation/curtsinger},
publisher = {USENIX Association},
month = jul
}
